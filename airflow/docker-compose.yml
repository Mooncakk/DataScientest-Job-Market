services:
  db:
    container_name: postgres_db
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: datascientest
      POSTGRES_DB: france_emplois
    ports:
      - "5432:5432"
    volumes:
      - ${PWD}/data/france_travail_ressources/sql:/docker-entrypoint-initdb.d
    networks:
      - project_network

  api:
    container_name: api
    image: mooncak/fastapi:v1
    ports:
      - "8000:8000"
    volumes:
      - ${PWD}/api:/app
      - ${PWD}/dags/france_travail_scripts:/app/scripts
    networks:
      - project_network


  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus:/prometheus
    command: 
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    networks:
      - project_network


  postgresql-exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: postgresql_exporter
    ports:
      - "9187:9187"
    environment:
      DATA_SOURCE_NAME: "postgresql://admin:datascientest@postgres_db/france_emplois?sslmode=disable"
    depends_on:
      - prometheus
      - db
    networks: 
      - project_network
  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD}
      GF_USERS_ALLOW_SIGN_UP: 'false'
    volumes:
      - grafana:/var/lib/grafana
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    networks:
      - project_network

volumes:
  prometheus:
  grafana:
  postgresql_exporter:

networks:
  project_network: